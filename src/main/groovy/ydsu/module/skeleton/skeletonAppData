#!/usr/bin/env groovy-shebang
package ydsu.module.skeleton

import groovy.transform.BaseScript
import ydsu.module.skeleton.source.YamlUtil
import ydsu.module.util.source.LoggingBaseScript
import ydsu.module.util.source.ReadAppData
import ydsu.module.util.source.WriteAppData

@BaseScript LoggingBaseScript baseScript

/**
 * Skeleton script showcasing the use of ReadAppData and WriteAppData utility classes that are part of the ydsu util
 * module.
 * Also, just like the YamlUtil class used in this script, you can add your own classes under the source subpackage.
 */

//region ReadAppData
ReadAppData rad = new ReadAppData()
File yaml = rad.conf('example-conf.yml')
LinkedHashMap content = YamlUtil.parseYaml(yaml)
info "Content and location of conf/example-conf.yml:\n${content.toString()}, ${yaml}"
//endregion

//region WriteAppData
// WriteAppData will be stored inside user's home
WriteAppData wad = new WriteAppData()
File yamlToWrite = wad.conf('example-conf.yml')
LinkedHashMap modified = new LinkedHashMap(content)
modified.put('key2', 'value2')
YamlUtil.dumpYaml(modified, yamlToWrite)
yaml = rad.conf('example-conf.yml')
content = YamlUtil.parseYaml(yaml)
info ''
info "New content and location of example-conf.yml:\n${content.toString()}, ${yaml}"
//endregion